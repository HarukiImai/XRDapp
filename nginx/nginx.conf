# nginx/nginx.conf

events {
    worker_connections 64; # 同時接続数 (必要に応じて調整)
}

http {
    # MIMEタイプの設定 (任意)
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ログのフォーマット (任意)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # アクセスログとエラーログの出力先 (任意)
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    # パフォーマンス関連の設定 (任意)
    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;

    server {
        listen 80;             # HTTPのポート80をリッスン
        server_name xrdchecker.com; # ドメイン名があれば設定 (例: example.com)

        location / {
            # リクエストを frontend サービスのポート 3000 へ転送
            proxy_pass http://frontend:3000;

            # プロキシ経由で元の情報を伝えるためのヘッダー設定
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket を使用する場合に必要な設定 (Next.js の HMR などで使用)
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # 必要であれば、バックエンドAPIへのプロキシ設定も追加できます
        # 例: /api/ へのリクエストを backend:8000 へ転送
        location /api/ {
            rewrite ^/api/(.*)$ /$1 break; # /api/ プレフィックスを削除
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # エラーページの設定 (任意)
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}